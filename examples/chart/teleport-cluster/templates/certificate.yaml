{{- if .Values.highAvailability.certManager.enabled }}
  {{- $domain := (required "clusterName is required in chartValues when certManager is enabled" .Values.clusterName) }}
  {{- $domainWildcard := printf "*.%s" (required "clusterName is required in chartValues when certManager is enabled" .Values.clusterName) }}
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  secretName: teleport-tls
  {{- if .Values.highAvailability.certManager.addCommonName }}
  commonName: {{ quote $domain }}
  {{- end }}
  dnsNames:
  - {{ quote $domain }}
  - {{ quote $domainWildcard }}
  issuerRef:
    name: {{ required "highAvailability.certManager.issuerName is required in chart values" .Values.highAvailability.certManager.issuerName }}
    kind: {{ required "highAvailability.certManager.issuerKind is required in chart values" .Values.highAvailability.certManager.issuerKind }}
    group: {{ required "highAvailability.certManager.issuerGroup is required in chart values" .Values.highAvailability.certManager.issuerGroup }}
  {{- with .Values.annotations.certSecret }}
  secretTemplate:
    annotations: {{- toYaml . | nindent 6 }}
  {{- end }}
{{- end }}

{{- if or .Values.custom_tls.enabled .Values.custom_tls.generate_secret }}
apiVersion: v1
kind: Secret
metadata:
  name: teleport-tls
  namespace: {{ .Release.Namespace }}
type: kubernetes.io/tls
data:
  tls.crt: {{ .Values.custom_tls.crt }}
  tls.key: {{ .Values.custom_tls.key }}
{{- end }}

{{- if or .Values.custom_tls.enabled .Values.custom_tls.generate_secret }}
apiVersion: v1
kind: Secret
metadata:
  name: teleport-tls-ca
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  ca.pem: {{ .Values.custom_tls.crt }}
{{- end }}
